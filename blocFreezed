------------------------------- Edit variables ----------------------------------------------------------
|NAME                    |                          |capitalize(camelCase(fileNameWithoutExtension()))| |
|fileNameWithoutExtension|fileNameWithoutExtension()|""                                               |X|
------------------------------- Edit variables ----------------------------------------------------------

------------------------------- Template text ----------------------------------------------
import 'package:bloc/bloc.dart';
import 'package:freezed_annotation/freezed_annotation.dart';
import '../repositories/$fileNameWithoutExtension$.dart';

part '$fileNameWithoutExtension$.freezed.dart';

enum Dest { Page1, Page2 }

@freezed
class $NAME$Event with _$$$NAME$Event {
  const $NAME$Event._();

  const factory $NAME$Event.initial() = Initial$NAME$Event;
  const factory $NAME$Event.navigate(Dest dest) = Navigate$NAME$Event;
}

@freezed
class $NAME$State with _$$$NAME$State {
  const $NAME$State._();
  
  const factory $NAME$State.initial() = Initial$NAME$State;
  const factory $NAME$State.navigate(Dest dest) = Navigate$NAME$State;
}

class $NAME$Bloc extends Bloc<$NAME$Event, $NAME$State> {
  final $NAME$Repository _repository;
  $NAME$Bloc(this._repository) : super(const Initial$NAME$State());

  @override
  Stream<$NAME$State> mapEventToState($NAME$Event event) =>
    event.when<Stream<$NAME$State>>(
      initial: _initial,
      navigate: _navigate
    );
  
  Stream<$NAME$State> _initial() async* {
    yield $NAME$State.initial();    
  }
  
  Stream<$NAME$State> _navigate(Dest dest) async* {
    yield $NAME$State.navigate(dest);
  }
}
------------------------------- Template text ----------------------------------------------
